//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proptiwise.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbrealestateEntities : DbContext
    {
        public dbrealestateEntities()
            : base("name=dbrealestateEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Applicant> Applicants { get; set; }
        public virtual DbSet<ApprovalStatus> ApprovalStatuses { get; set; }
        public virtual DbSet<Blog> Blogs { get; set; }
        public virtual DbSet<Building> Buildings { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<CommonDocument> CommonDocuments { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<damage_intventory> damage_intventory { get; set; }
        public virtual DbSet<deposit_transaction> deposit_transaction { get; set; }
        public virtual DbSet<Deposit> Deposits { get; set; }
        public virtual DbSet<Description> Descriptions { get; set; }
        public virtual DbSet<DocumentType> DocumentTypes { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<Fault> Faults { get; set; }
        public virtual DbSet<FaultType> FaultTypes { get; set; }
        public virtual DbSet<Inspection> Inspections { get; set; }
        public virtual DbSet<inventory_type> inventory_type { get; set; }
        public virtual DbSet<InventoryImage> InventoryImages { get; set; }
        public virtual DbSet<Invite> Invites { get; set; }
        public virtual DbSet<MovingIn> MovingIns { get; set; }
        public virtual DbSet<Mylist> Mylists { get; set; }
        public virtual DbSet<paymentHistory> paymentHistories { get; set; }
        public virtual DbSet<Plan> Plans { get; set; }
        public virtual DbSet<PropertyAirConditioning> PropertyAirConditionings { get; set; }
        public virtual DbSet<PropertyFeature> PropertyFeatures { get; set; }
        public virtual DbSet<PropertyFlooring> PropertyFloorings { get; set; }
        public virtual DbSet<PropertyHeating> PropertyHeatings { get; set; }
        public virtual DbSet<PropertyImage> PropertyImages { get; set; }
        public virtual DbSet<PropertyParking> PropertyParkings { get; set; }
        public virtual DbSet<PropertyStyle> PropertyStyles { get; set; }
        public virtual DbSet<PropertyType> PropertyTypes { get; set; }
        public virtual DbSet<Purposal> Purposals { get; set; }
        public virtual DbSet<reminderlist> reminderlists { get; set; }
        public virtual DbSet<RentDue> RentDues { get; set; }
        public virtual DbSet<ReportRole> ReportRoles { get; set; }
        public virtual DbSet<Serviceprovider> Serviceproviders { get; set; }
        public virtual DbSet<service> services { get; set; }
        public virtual DbSet<setting> settings { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<TabRole> TabRoles { get; set; }
        public virtual DbSet<tb_PropertyNotes> tb_PropertyNotes { get; set; }
        public virtual DbSet<tbl_area> tbl_area { get; set; }
        public virtual DbSet<tbl_inventory> tbl_inventory { get; set; }
        public virtual DbSet<tbl_invoice> tbl_invoice { get; set; }
        public virtual DbSet<tbl_offer> tbl_offer { get; set; }
        public virtual DbSet<tbl_owner> tbl_owner { get; set; }
        public virtual DbSet<tbl_vendor> tbl_vendor { get; set; }
        public virtual DbSet<tblDocument> tblDocuments { get; set; }
        public virtual DbSet<tbMessage> tbMessages { get; set; }
        public virtual DbSet<TenancyAgreement> TenancyAgreements { get; set; }
        public virtual DbSet<TenancyDetail> TenancyDetails { get; set; }
        public virtual DbSet<Tenant> Tenants { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
        public virtual DbSet<UserDocument> UserDocuments { get; set; }
        public virtual DbSet<UserReportsPermission> UserReportsPermissions { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<UserTabPermission> UserTabPermissions { get; set; }
        public virtual DbSet<ViewingPurposal> ViewingPurposals { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Property> Properties { get; set; }
        public virtual DbSet<tbl_lease> tbl_lease { get; set; }
        public virtual DbSet<RequestView> RequestViews { get; set; }
        public virtual DbSet<tbl_LeaseCredits> tbl_LeaseCredits { get; set; }
        public virtual DbSet<tbl_othercharges> tbl_othercharges { get; set; }
        public virtual DbSet<application_details> application_details { get; set; }
    
        public virtual ObjectResult<gettenantdetails_Result> gettenantdetails(Nullable<int> landlordid)
        {
            var landlordidParameter = landlordid.HasValue ?
                new ObjectParameter("landlordid", landlordid) :
                new ObjectParameter("landlordid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<gettenantdetails_Result>("gettenantdetails", landlordidParameter);
        }
    }
}
